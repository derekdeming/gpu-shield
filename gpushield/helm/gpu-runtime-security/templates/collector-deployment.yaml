{{- if .Values.collector.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "gpu-runtime-security.fullname" . }}-collector
  labels:
    {{- include "gpu-runtime-security.labels" . | nindent 4 }}
    app.kubernetes.io/component: collector
spec:
  replicas: {{ .Values.collector.replicaCount }}
  selector:
    matchLabels:
      {{- include "gpu-runtime-security.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: collector
  template:
    metadata:
      labels:
        {{- include "gpu-runtime-security.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: collector
    spec:
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "gpu-runtime-security.serviceAccountName" . }}
      containers:
      - name: collector
        image: "{{ .Values.global.imageRegistry }}{{ .Values.collector.image.repository }}:{{ .Values.collector.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.collector.image.pullPolicy }}
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        - name: metrics
          containerPort: 9090
          protocol: TCP
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        {{- with .Values.collector.env }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        args:
        - --port=8080
        - --metrics-port=9090
        - --log-level={{ .Values.collector.logLevel | default "info" }}
        - --backend-url={{ .Values.collector.backendURL | default "http://backend:8000" }}
        - --buffer-size={{ .Values.collector.bufferSize | default 1000 }}
        - --flush-interval={{ .Values.collector.flushInterval | default "30s" }}
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
        resources:
          {{- toYaml .Values.collector.resources | nindent 10 }}
      {{- with .Values.collector.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.collector.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.collector.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }} 